# Check if user script is run as root user in sudo context and exit if not
if [ -z "${SUDO_USER}" ]; then
    echo "ERROR: This script needs to be started in sudo context, opened by the main normal user account of this computer, it can't be run just as root or a normal user!"
    exit 1
fi

# Check if the current directory is the same as the scripts location, otherwise relative paths in the script would not work
SCRIPTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPTDIR" || {
    echo "ERROR: Could not change current directory to scripts location. Please run the script from its actual location!"
    exit 1
}
echo "Changed current directory to scripts location: $(pwd)"
if [[ "$(pwd)" != "$SCRIPTDIR" ]]; then
    echo "ERROR: Could not change current directory to scripts location. Please run the script from its actual location!"
    exit 1
fi

echo "Starting default system configuration"
echo

# Download and activate SilverLPs kubuntu-gearspinner plymouth theme
cd /tmp
git clone https://github.com/SilverLPs/plymouth-kubuntu-gearspinner.git
sudo cp -vR plymouth-kubuntu-gearspinner/kubuntu-gearspinner /usr/share/plymouth/themes/
sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/kubuntu-gearspinner/kubuntu-gearspinner.plymouth 160
sudo update-alternatives --set default.plymouth /usr/share/plymouth/themes/kubuntu-gearspinner/kubuntu-gearspinner.plymouth
cd -
echo

# Disable kernel trim functionality, as it is redundant with systemd trim and can damage SSDs due to double trimming
bash ./modules/fstab_notrim.sh
cat /etc/fstab
echo

# Enable kernel features for enhanced realtime preemption (better for low latency tasks)
bash ./modules/grub_add_preempt.sh
bash ./modules/grub_add_threadirqs.sh
echo

# Disable GRUB boot menu in error cases to avoid the boot menu after offline-updates due to systemd.offline-update setting recordfail in /boot/grub/grubenv to 1.
# Related: https://discuss.kde.org/t/every-time-kde-neon-gets-a-system-upgrade-the-grub-timer-resets-to-20-30-seconds/2294/5
bash ./modules/grub_set_recordfail_timer.sh
echo

# Enable the boot and system start related settings above
update-initramfs -u -k all
update-grub
echo

# Install useful default software from official package manager repository and remove unnecessary software and snap
apt-get update
apt-get remove -q -y plasma-vault firefox libreoffice-* elisa haruna konversation krdc neochat
snap remove firefox firmware-updater gnome-42-2204 gtk-common-themes thunderbird
snap remove core22
snap remove bare
snap remove snapd
apt-get purge -q -y snapd plasma-discover-backend-snap
apt-mark hold snapd
apt-mark hold plasma-discover-backend-snap
echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
apt-get install -q -y curl net-tools iftop btop htop neofetch kubuntu-restricted-extras gstreamer1.0-vaapi libvdpau-va-gl1 fonts-crosextra-carlito fonts-crosextra-caladea exfatprogs synaptic openjdk-17-jre vlc vlc-plugin-fluidsynth vlc-plugin-jack vlc-plugin-pipewire vlc-plugin-svg nfs-common flatpak kde-config-flatpak plasma-discover-backend-flatpak pipewire-jack pipewire-alsa latencytop kolourpaint cpu-x mediainfo mediainfo-gui remmina
apt-get autoremove -y

# Install Google Chrome
# Unfortunately there are no chromium browsers in the official Ubuntu repositories without Snap on Ubuntu, so we need an official 3rd party browser like Google Chrome, Brave or Vivaldi. Could be replaced by Chromium again when the Flathub package becomes official and verified. Until then, most people would prefer Chrome over Brave, Vivaldi or Edge. Firefox is not an option and will probably never be an option again...
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
apt-get install ./google-chrome-stable_current_amd64.deb
echo

# Add Flathub to flatpak sources
flatpak -v remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
echo

# Configure login-screen settings
#This config file was auto-generated by KDEs system settings application after applying the breeze theme and after applying "plasma settings" onto it (there is a button for this setting)
cp -v ./configs/sddm/kde_settings.conf /etc/sddm.conf.d/kde_settings.conf
chmod -v 644 /etc/sddm.conf.d/kde_settings.conf
echo

# Lower threshhold for swapping, so it only happens when absolutely necessary (better for low latency tasks)
echo "vm.swappiness = 10" > /etc/sysctl.d/98-swappiness.conf
chmod -v 644 /etc/sysctl.d/98-swappiness.conf
cat /etc/sysctl.d/98-swappiness.conf
echo

# Set Pipewires JACK bridge as the system-wide default JACK API
cp -v /usr/share/doc/pipewire/examples/ld.so.conf.d/pipewire-jack-*.conf /etc/ld.so.conf.d/
ldconfig -v
echo

# Disable all Ubuntu telemetry (hopefully)
busctl call com.ubuntu.WhoopsiePreferences /com/ubuntu/WhoopsiePreferences com.ubuntu.WhoopsiePreferences SetReportCrashes b false
busctl call com.ubuntu.WhoopsiePreferences /com/ubuntu/WhoopsiePreferences com.ubuntu.WhoopsiePreferences SetAutomaticallyReportCrashes b false
busctl call com.ubuntu.WhoopsiePreferences /com/ubuntu/WhoopsiePreferences com.ubuntu.WhoopsiePreferences SetReportMetrics b false
echo

# Fully disable unattended upgrades (it's better to use Discover for auto-updates, by activating the option in system settings, as it will use the Offline Update feature then)
cp -v ./configs/apt/10periodic /etc/apt/apt.conf.d/10periodic
cp -v ./configs/apt/20auto-upgrades /etc/apt/apt.conf.d/20auto-upgrades
echo

echo "Please reboot to apply all systems settings"
echo
